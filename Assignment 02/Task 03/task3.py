# -*- coding: utf-8 -*-
"""task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19C9VUhlC9KbygghfVLsJAeQkT9gZsZo5
"""

file_in=open('input3.txt','r')
file_out=open('output3.txt','w')
test_case=int(file_in.readline())
list1=[0]*test_case

#creating a list from the input
for i in range(test_case):
  temp=file_in.readline().split(' ')
  if i!=test_case-1:
    list1[i]=tuple((int(temp[0]),int(temp[-1][:-1])))
  else:
    list1[i]=tuple((int(temp[0]),int(temp[-1][0:])))

#sorting the list by the end time
for i in range(len(list1)):
  min_idx=i
  for j in range(i+1,len(list1)):
    if list1[min_idx][-1]>list1[j][-1]:
      min_idx=j
  list1[i], list1[min_idx]= list1[min_idx],list1[i]

work=list1[0] #giving the immidiate first work
work_list=[] #for total list of works
work_list.append(work) # first work insertion in total work list
for i in range(1,len(list1)):
  if work[-1]<=list1[i][0]: #checking if the starting time of the chceking work is >= current work end time
    work_list.append(list1[i]) #yes, then inserting it to the total list
    work=list1[i] #updating the current work
file_out.write(f'{len(work_list)}') #for the total number of works

#for exactly how sample output look like
for i in range(len(work_list)):
  file_out.write(f'\n{work_list[i][0]} {work_list[i][-1]}')
file_out.close()