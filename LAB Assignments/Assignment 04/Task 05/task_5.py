# -*- coding: utf-8 -*-
"""Task 5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ysf89-b7-MPYQ4HrZ3XnDP9cf4QymiMO
"""

file_in=open('input5.txt','r')
file_out=open('output5.txt','w')
temp=file_in.readline().split(' ')
node,edges,elem=int(temp[0]),int(temp[1]),int(temp[2])
ad_list=[[] for i in range(node+1)]
visited_list=[0 for i in range(node+1)]
parent_list=[0 for i in range(node+1)]
node_level=[-1 for i in range(node+1)]
for i in range(1,edges+1):
  temp=file_in.readline().split(' ')
  ad_list[int(temp[0])].append(int(temp[1]))
  ad_list[int(temp[1])].append(int(temp[0]))
def BFS_Traverse(ad_list,source):
  visited_list[source]=1
  node_level[source]+=1
  queue=[]
  queue.append(source)
  while len(queue)!=0:
    temp=queue.pop(0)
    for j in ad_list[temp]:
      if visited_list[j]==0:
        visited_list[j]=1
        parent_list[j]=temp
        node_level[j]=node_level[temp]+1
        queue.append(j)
      if elem==j:
        break

source=1
BFS_Traverse(ad_list,source)
ans=[]
file_out.write(f'Time: {node_level[elem]}\n')
while len(parent_list)!=0:
  ans.append(elem)
  temp1=parent_list[elem]
  elem=temp1
  if elem==0:
    break
file_out.write(f'Shortest Path: ')
for i in range(len(ans)-1,-1,-1):
  file_out.write(f'{ans[i]} ')
file_out.close()